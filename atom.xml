<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一条咸鱼的自述</title>
  
  <subtitle>weiweizhuang个人分享</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="zweiwei.cn/"/>
  <updated>2020-01-01T02:49:37.688Z</updated>
  <id>zweiwei.cn/</id>
  
  <author>
    <name>庄为</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue项目打包优化</title>
    <link href="zweiwei.cn/vue%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%89%93%E5%8C%85/"/>
    <id>zweiwei.cn/vue项目构建之打包/</id>
    <published>2020-01-01T02:49:00.000Z</published>
    <updated>2020-01-01T02:49:37.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue项目打包"><a href="#vue项目打包" class="headerlink" title="vue项目打包"></a>vue项目打包</h1><h2 id="一个多月的时间，终于把这个vue项目写的差不多了。然后我试着build了一下，吓到我了，这么小的项目竟然打包出来14M"><a href="#一个多月的时间，终于把这个vue项目写的差不多了。然后我试着build了一下，吓到我了，这么小的项目竟然打包出来14M" class="headerlink" title="一个多月的时间，终于把这个vue项目写的差不多了。然后我试着build了一下，吓到我了，这么小的项目竟然打包出来14M+"></a>一个多月的时间，终于把这个vue项目写的差不多了。然后我试着build了一下，吓到我了，这么小的项目竟然打包出来14M+</h2><p><img src="/images/build1.png" alt="优化前体积大小" title="优化前体积大小"><br><img src="/images/byte1.png" alt="优化前体积大小" title="优化前体积大小"></p><blockquote><p>这可难住我了，于是乎就想能不能压缩一下体积，毕竟一张图片的大小竟然超过了1M，这肯定是不符合生产规范的。于是乎，一只菜鸟又开始了无尽的百度之路！</p><ul><li><em>下面就放几个有关优相关的博客文章，毕竟是人家大神分享的，还是注明一下转载 ！</em></li></ul></blockquote><pre><code>肯定是先从webpack的配置入手 </code></pre><p><a href="https://blog.csdn.net/llf1991/article/details/79869351" target="_blank" rel="noopener">Vue脚手架工程优化之源码和图片压缩–webpack配置</a></p><pre><code>+ 把配置文件config/index.js文件 productionSourceMap: true 这个操作，基本上可以减少一半的体积 + 然后在下载 npm install image-webpack-loader --save-dev 在build/webpack.base.conf.js中改如下配置 </code></pre><p><a href="https://blog.csdn.net/przlovecsdn/article/details/82761606" target="_blank" rel="noopener">vue打包通过image-webpack-loader插件对图片压缩优化</a><br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  <span class="built_in">module</span>.exports = &#123;</span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">       &#123;</span><br><span class="line">          test: <span class="regexp">/\.(png|jpe?g|gif|svg)(\?.*)?$/</span>,</span><br><span class="line">        <span class="comment">// loader: 'url-loader',</span></span><br><span class="line">        <span class="comment">// options: &#123;</span></span><br><span class="line">            <span class="comment">// limit: 100000,</span></span><br><span class="line">            <span class="comment">// name: utils.assetsPath('img/[name].[hash:7].[ext]')</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        loader: [<span class="string">'url-loader?limit=10000&amp;name='</span> +utils.assetsPath(<span class="string">'img/[name].[hash:7].[ext]'</span>),<span class="string">'image-webpack-loader'</span>]</span><br><span class="line">                   &#125;,</span><br><span class="line">               ]</span><br><span class="line">           &#125;,</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></p><pre><code>+ 到这一步，从最初的14M+已经压缩到了3.64M。可以说体积小了很多。后面还会让UI把一些静态资源尽量压缩小一点给我，不然一张图就几MB给我，还真hold不住！待你兴冲冲的打包完，然后发布到服务器时，你呆住了，一些背景图片访问不到了。这可咋搞???</code></pre><p><img src="/images/build2.png" alt="优化后体积大小" title="优化后体积大小"><br><img src="/images/byte2.png" alt="优化后体积大小" title="优化后体积大小"><br>这可难道精通百度的我，带着这个疑惑，又是一番百度，果真找到了答案。</p><pre><code>+ 由于我使用了image-webpack-load 重新定义了图片的访问规则。所以导致一些使用背景图片的相对路径找不到文件，直接按照</code></pre><p><a href="https://www.jianshu.com/p/45acfd463347" target="_blank" rel="noopener">vue项目打包在本地直接访问</a> 设置就可以了</p><pre><code> 1 打开项目文件夹。找到config文件夹里的index.js文件中的build对象，将assetsPublicPath中的“/”，改为“./”。2 assetsPublicPath: &apos;./&apos;,改成相对路径; 如果你的css文件中引用了background相对路径,那么在打包后预览后是会出现资源找不到的情况的;可以在build文件夹的utils.js下:新增这个publicPath这个属性;</code></pre> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(options.extract) &#123;</span><br><span class="line">    <span class="keyword">return</span> ExtractTexPlugin.extract(&#123;</span><br><span class="line">        use: loaders,</span><br><span class="line">        fallback: <span class="string">'vue-style-loader'</span>,</span><br><span class="line">        publicPath: <span class="string">'../../'</span> <span class="comment">//这个是重点</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>* 最后直接打开运行打包后的dist目录下面的index.html，项目就完美的运行起来了。** 目前就优化这些，后面再有做别的优化，再更新上来……</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vue项目打包&quot;&gt;&lt;a href=&quot;#vue项目打包&quot; class=&quot;headerlink&quot; title=&quot;vue项目打包&quot;&gt;&lt;/a&gt;vue项目打包&lt;/h1&gt;&lt;h2 id=&quot;一个多月的时间，终于把这个vue项目写的差不多了。然后我试着build了一下，吓到我了，这
      
    
    </summary>
    
      <category term="前端" scheme="zweiwei.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="zweiwei.cn/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
      <category term="生产构建之打包优化" scheme="zweiwei.cn/categories/%E5%89%8D%E7%AB%AF/vue/%E7%94%9F%E4%BA%A7%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%89%93%E5%8C%85%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="vue" scheme="zweiwei.cn/tags/vue/"/>
    
      <category term="前端" scheme="zweiwei.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>封装axios 请求</title>
    <link href="zweiwei.cn/axios%E5%B0%81%E8%A3%85/"/>
    <id>zweiwei.cn/axios封装/</id>
    <published>2019-11-13T15:59:00.000Z</published>
    <updated>2019-11-13T16:24:23.052Z</updated>
    
    <content type="html"><![CDATA[<h2 id="axios封装"><a href="#axios封装" class="headerlink" title="axios封装"></a>axios封装</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line">    <span class="keyword">import</span> &#123; MessageBox, Message &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line">    <span class="comment">// import store from '@/store'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// create an axios instance</span></span><br><span class="line">    <span class="keyword">const</span> service = axios.create(&#123;</span><br><span class="line">      baseURL: <span class="string">''</span>, <span class="comment">// url = base url + request url</span></span><br><span class="line">      <span class="comment">// withCredentials: true, // send cookies when cross-domain requests</span></span><br><span class="line">      headers: &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'lang'</span>: <span class="string">'zh-CN,zh;q=0.9'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      timeout: <span class="number">5000</span> <span class="comment">// request timeout</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// request interceptor</span></span><br><span class="line">        service.interceptors.request.use(</span><br><span class="line">          config =&gt; &#123;</span><br><span class="line">        <span class="comment">// do something before request is sent</span></span><br><span class="line">        <span class="keyword">if</span> (sessionStorage.getItem(<span class="string">"token"</span>)) &#123;</span><br><span class="line">          <span class="comment">// let each request carry token</span></span><br><span class="line">          <span class="comment">// ['x-auth-token'] is a custom headers key</span></span><br><span class="line">          <span class="comment">// please modify it according to the actual situation</span></span><br><span class="line">          config.headers[<span class="string">'x-auth-token'</span>] = sessionStorage.getItem(<span class="string">"token"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">      &#125;,</span><br><span class="line">      error =&gt; &#123;</span><br><span class="line">        <span class="comment">// do something with request error</span></span><br><span class="line">        <span class="built_in">console</span>.log(error) <span class="comment">// for debug</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error)</span><br><span class="line">          &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// response interceptor</span></span><br><span class="line"></span><br><span class="line">service.interceptors.response.use(</span><br><span class="line"></span><br><span class="line">  response =&gt; &#123;</span><br><span class="line"><span class="keyword">const</span> res = response.data</span><br><span class="line"><span class="keyword">if</span>(response.headers[<span class="string">'x-auth-token'</span>]) &#123;</span><br><span class="line">    sessionStorage.setItem(<span class="string">'token'</span>, response.headers[<span class="string">'x-auth-token'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// if the custom code is not 20000, it is judged as an error.</span></span><br><span class="line">    <span class="keyword">if</span> (response.status !== <span class="number">200</span> ) &#123;</span><br><span class="line">        Message(&#123;</span><br><span class="line">            message: res.msg || <span class="string">'Error'</span>,</span><br><span class="line">            type: <span class="string">'error'</span>,</span><br><span class="line">            duration: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (res.code === <span class="number">508</span> || res.code === <span class="number">502</span> || res.code === <span class="number">503</span>) &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(<span class="keyword">new</span> <span class="built_in">Error</span>(res.msg || <span class="string">'Error'</span>))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>  <span class="built_in">Promise</span>.resolve(res)</span><br><span class="line">    &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      error =&gt; &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'err'</span> + error) <span class="comment">// for debug</span></span><br><span class="line">        Message(&#123;</span><br><span class="line">          message: error.msg,</span><br><span class="line">          type: <span class="string">'error'</span>,</span><br><span class="line">          duration: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure></code></pre><p>##先统一在一个文件里面请求<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import service from &apos;../utils/ajax&apos;</span><br><span class="line">import API from &apos;../utils/API&apos;</span><br><span class="line"></span><br><span class="line">export const qesLogin = (data) =&gt; &#123;</span><br><span class="line">    return service(&#123;</span><br><span class="line">        url: API.USER.LOGIN,</span><br><span class="line">        method: &apos;post&apos;,</span><br><span class="line">        data</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h2><pre><code>![aixos请求例子](/images/axios-request.png)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;axios封装&quot;&gt;&lt;a href=&quot;#axios封装&quot; class=&quot;headerlink&quot; title=&quot;axios封装&quot;&gt;&lt;/a&gt;axios封装&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;tabl
      
    
    </summary>
    
      <category term="前端" scheme="zweiwei.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="zweiwei.cn/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
      <category term="组件封装" scheme="zweiwei.cn/categories/%E5%89%8D%E7%AB%AF/vue/%E7%BB%84%E4%BB%B6%E5%B0%81%E8%A3%85/"/>
    
    
      <category term="vue" scheme="zweiwei.cn/tags/vue/"/>
    
      <category term="前端" scheme="zweiwei.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>封装一个Toast插件</title>
    <link href="zweiwei.cn/%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AAvue%E6%8F%90%E7%A4%BA%E7%BB%84%E4%BB%B6Toast/"/>
    <id>zweiwei.cn/封装一个vue提示组件Toast/</id>
    <published>2019-11-13T15:21:00.000Z</published>
    <updated>2019-11-13T15:54:58.632Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开始封装一个提示插件"><a href="#开始封装一个提示插件" class="headerlink" title="开始封装一个提示插件"></a>开始封装一个提示插件</h2><blockquote><blockquote><blockquote><h5 id="基于elementUI-icon-组件封装"><a href="#基于elementUI-icon-组件封装" class="headerlink" title="基于elementUI icon 组件封装"></a>基于elementUI icon 组件封装</h5></blockquote></blockquote></blockquote><h3 id="vue模版文件"><a href="#vue模版文件" class="headerlink" title="vue模版文件"></a>vue模版文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">toast/index.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;wrap&quot; v-if=&quot;showWrap&quot; :class=&quot;showContent ?&apos;fadein&apos;:&apos;fadeout&apos;&quot;&gt;</span><br><span class="line">          &lt;div&gt;&lt;i :class=&quot;icon&quot; class=&quot;toastIcon&quot;&gt;&lt;/i&gt;&lt;/div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#123;&#123;text?text : &apos;请输入提示语&apos;&#125;&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  mounted()&#123;</span><br><span class="line">    switch (this.icon) &#123;</span><br><span class="line">      case 1:</span><br><span class="line">        this.icon = &apos;el-icon-success&apos;</span><br><span class="line">        break;</span><br><span class="line">      case 2:</span><br><span class="line">        this.icon = &apos;el-icon-error&apos;</span><br><span class="line">        break;</span><br><span class="line">      case 3:</span><br><span class="line">        this.icon = &apos;el-icon-warning&apos;</span><br><span class="line">        break;</span><br><span class="line">      default:</span><br><span class="line">        this.icon = this.icon</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.wrap &#123;</span><br><span class="line">  width: 260px;</span><br><span class="line">  min-height: 35px;</span><br><span class="line">  line-height: 35px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">  position: fixed;</span><br><span class="line">  left: 50%;</span><br><span class="line">  top: 50%;</span><br><span class="line">  background: rgba(0, 0, 0, 0.35);</span><br><span class="line">  padding: 10px;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">  transform: translate(-50%, -50%);</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">i.toastIcon &#123;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">&#125;</span><br><span class="line">i.el-icon-success &#123;</span><br><span class="line">  color:greenyellow;</span><br><span class="line">&#125;</span><br><span class="line">i.el-icon-error &#123;</span><br><span class="line">  color:red;</span><br><span class="line">&#125;</span><br><span class="line">.fadein &#123;</span><br><span class="line">  animation: animate_in 0.25s;</span><br><span class="line">&#125;</span><br><span class="line">.fadeout &#123;</span><br><span class="line">  animation: animate_out 0.25s;</span><br><span class="line">  opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes animate_in &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes animate_out &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">  &#125;</span><br><span class="line">  40% &#123;</span><br><span class="line">    opacity: .6;</span><br><span class="line">  &#125;</span><br><span class="line">  80% &#123;</span><br><span class="line">    opacity: .3;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="js-文件"><a href="#js-文件" class="headerlink" title="js 文件"></a>js 文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">toast/index.js</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> toastComponent <span class="keyword">from</span> <span class="string">'./toast.vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ToastConstructor = vue.extend(toastComponent)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; text 提示语</span></span><br><span class="line"><span class="comment"> * @param &#123;Number, String&#125; icon icon图标类</span></span><br><span class="line"><span class="comment"> * @param &#123;Number&#125; duration 延迟时间</span></span><br><span class="line"><span class="comment"> * @param &#123;Function&#125; callBack 回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showToast</span>(<span class="params">text, icon=<span class="string">'ssss'</span>, duration = <span class="number">2000</span>,callBack</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> toastDom = <span class="keyword">new</span> ToastConstructor(&#123;</span><br><span class="line">        el: <span class="built_in">document</span>.createElement(<span class="string">'div'</span>),</span><br><span class="line">        data() &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                text, </span><br><span class="line">                icon,</span><br><span class="line">                callBack,</span><br><span class="line">                showWrap: <span class="literal">true</span>,    <span class="comment">// 是否显示组件</span></span><br><span class="line">                showContent: <span class="literal">true</span>  <span class="comment">// 作用:在隐藏组件之前,显示隐藏动画</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(toastDom.$el) </span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; toastDom.showContent = <span class="literal">false</span> &#125;, duration)</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; </span><br><span class="line">        toastDom.showWrap = <span class="literal">false</span> </span><br><span class="line">        <span class="keyword">if</span>(callBack &amp;&amp; <span class="keyword">typeof</span> callBack  === <span class="string">'function'</span>) &#123;</span><br><span class="line">            toastDom.callBack()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(callBack) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'callBack 参数必须要传函数！'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, duration)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册为全局组件的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">registryToast</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    vue.prototype.$toast = showToast</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> registryToast</span><br></pre></td></tr></table></figure><h3 id="mian-js"><a href="#mian-js" class="headerlink" title="mian.js"></a>mian.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在main.js文件里面注册到vue实例中去，这样全局就可以使用了</span></span><br><span class="line">main.js</span><br><span class="line"><span class="keyword">import</span> toastRegistry <span class="keyword">from</span> <span class="string">'./components/toast/index'</span></span><br><span class="line"></span><br><span class="line">Vue.use(toastRegistry)</span><br></pre></td></tr></table></figure><p> <del>有一个地方是百度来，加以改造了一下，如发现有冒犯的地方，可以联系我删除</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;开始封装一个提示插件&quot;&gt;&lt;a href=&quot;#开始封装一个提示插件&quot; class=&quot;headerlink&quot; title=&quot;开始封装一个提示插件&quot;&gt;&lt;/a&gt;开始封装一个提示插件&lt;/h2&gt;&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;h
      
    
    </summary>
    
      <category term="前端" scheme="zweiwei.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="vue" scheme="zweiwei.cn/categories/%E5%89%8D%E7%AB%AF/vue/"/>
    
      <category term="组件封装" scheme="zweiwei.cn/categories/%E5%89%8D%E7%AB%AF/vue/%E7%BB%84%E4%BB%B6%E5%B0%81%E8%A3%85/"/>
    
    
      <category term="vue" scheme="zweiwei.cn/tags/vue/"/>
    
      <category term="前端" scheme="zweiwei.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
